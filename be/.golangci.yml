run:
  timeout: 10m
  go: "1.24"
  issues-exit-code: 0
  tests: true

output:
  formats:
    - format: colored-line-number
      path: stdout
  print-issued-lines: true
  print-linter-name: true
  sort-results: true

linters:
  enable:
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - typecheck
    - unused
    - gofmt
    - goimports
    - revive
    - gosec
    - goconst
    - misspell
    - lll
    - gocyclo
    - dupl
    - unparam
    - nakedret
    - prealloc
    - bodyclose
    - noctx
    - rowserrcheck
    - sqlclosecheck
    - gocritic
    - gocognit
    - nestif
    - funlen
    - whitespace
    - stylecheck
    - unconvert
    - copyloopvar
    - nolintlint
    - dogsled
    - goprintffuncname
  
  disable:
    - exhaustive
    - forbidigo
    - forcetypeassert
    - godot
    - godox
    - err113
    - goheader
    - gomodguard
    - nlreturn
    - paralleltest
    - testpackage
    - wsl

linters-settings:
  errcheck:
    check-type-assertions: true
    check-blank: true
  
  govet:
    enable-all: true
  
  lll:
    line-length: 120
  
  gocyclo:
    min-complexity: 15
  
  dupl:
    threshold: 100
  
  nakedret:
    max-func-lines: 30
  
  funlen:
    lines: 100
    statements: 50
  
  gocognit:
    min-complexity: 20
  
  nestif:
    min-complexity: 4
  
  misspell:
    locale: US
  
  nolintlint:
    allow-leading-space: true
    require-explanation: true
    require-specific: true
  
  revive:
    min-confidence: 0
  
  gosec:
    excludes:
      - G104 # Errors unhandled (handled by errcheck)
      - G204 # Subprocess launched with variable
  
  goconst:
    min-len: 3
    min-occurrences: 3
  
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - opinionated
      - performance
      - style
    disabled-checks:
      - dupImport
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc
  
  goimports:
    local-prefixes: strikepad-backend
  
  gomnd:
    settings:
      mnd:
        checks: argument,case,condition,operation,return,assign
        ignored-numbers: 0,1,2,3
        ignored-functions: strings.SplitN

issues:
  exclude-files:
    - ".*\\.pb\\.go$"
    - ".*_gen\\.go$"
  exclude-dirs:
    - vendor
    - node_modules
  uniq-by-line: true
  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - funlen
        - lll
        - gocognit
        - nestif
        - gomnd
    
    # Exclude known linters from partially hard-to-fix issues
    - path: internal/migrations/
      linters:
        - lll
        - goconst
    
    # Exclude package comment requirements for main packages
    - path: main\.go
      linters:
        - revive
      text: "package-comments"
    
    # Exclude certain revive rules for generated files
    - path: \.pb\.go
      linters:
        - revive
        - stylecheck
    
    # Allow long lines in generated files
    - path: \.pb\.go
      linters:
        - lll
    
    # Exclude model package from line length checks
    - path: internal/model
      linters:
        - lll

  exclude:
    # errcheck: Almost all programs ignore errors on these functions and in most cases it's ok
    - Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*print.*|os\.(Un)?Setenv). is not checked
    
    # govet: Common false positives
    - (possible misuse of unsafe.Pointer|should have signature)
    
    # staticcheck: Developers tend to write in C-style with an explicit 'break' in a 'switch', so it's ok to ignore
    - ineffective break statement. Did you mean to break out of the outer loop
    
    # gosec: Too many false-positives on 'unsafe' usage
    - G103
    
    # gocritic: Very noisy linter
    - (comment on exported (method|function|type|const)|should have( a package)? comment|comment should be of the form)
  
  exclude-use-default: false
  fix: false
  max-issues-per-linter: 50
  max-same-issues: 3
  new-from-rev: ""
  new-from-patch: ""